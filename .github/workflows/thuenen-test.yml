# This is a basic workflow to help you get started with Actions

name: GeoNode Client thuenen_4.3.x CI (tests)

concurrency: 
  group: "client_test_thuenen_4.3.x"
  cancel-in-progress: true
# Controls when the workflow will run
on:
  # Triggers the workflow pull request events but only for the 4.3.x branch
  pull_request:
    branches: [ thuenen_4.3.x ]
    paths: 
      - "geonode_mapstore_client/client/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-front-end:
    env:
      working-directory: ./geonode_mapstore_client/client
    runs-on: ubuntu-latest
    steps:
      - name: "Checking out"
        uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: "Setting up npm"
        uses: actions/setup-node@v3
        with:
            node-version: '12.x'

      ############
      # CACHING
      ############
      - name: "Cache node modules"
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      ###############
      # NPM CHECKS
      #############
      - name: "Run npm install"
        run: npm install
        working-directory: ${{env.working-directory}}

      - name: "Run ESlint"
        run: npm run lint
        working-directory: ${{env.working-directory}}

      - name: "Run Unit Tests"
        run: npm test
        working-directory: ${{env.working-directory}}
